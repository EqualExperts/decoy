#!/usr/bin/env python3
import click
import duckdb
from io import TextIOWrapper

from cli_io import print_rows
from decoy import register_en, get_connection


@click.group()
def rootcmd():
    pass


@rootcmd.command()
@click.argument("filename", type=click.File("r"))
def exec(filename: TextIOWrapper):
    """Executes the sql in <filename> against duckdb, separate datasets with ---"""
    con = get_connection()
    register_en(con)

    input_sql_list = filename.read().split("---")
    for input_sql in input_sql_list:
        con.execute(input_sql)
        res = con.fetchdf()
        print_rows(res)


@rootcmd.command()
def generate():
    con = get_connection()
    register_en(con)
    count = 10
    con.execute("DROP TABLE IF EXISTS name_table;")
    con.execute(
        f"""
CREATE TABLE name_table AS SELECT
range as id,
decoy_en('name') as name
FROM range({count})"""
    )
    con.execute("""SELECT * FROM name_table;""")
    table = con.fetchall()
    for row in table:
        print(row)


@rootcmd.command()
def shuffle():
    con = get_connection()
    register_en(con)
    count = 10
    con.execute(
        f"""
SELECT name,
shuffle(name) as arrow,
intratable_sample(name) as sampled
FROM test;"""
    )
    res = con.fetchall()
    for row in res:
        print(row)


@rootcmd.command()
def oversample():
    con = get_connection()
    register_en(con)
    value_count = 10
    sample_count = 20
    con.execute("DROP TABLE IF EXISTS name_table;")
    con.execute("DROP TABLE IF EXISTS oversample;")
    con.execute(
        f"""
CREATE TABLE name_table AS SELECT
range as id,
decoy_en('name') as name
FROM range({value_count})"""
    )
    con.execute(
        f"""
WITH oversampling_table AS
(SELECT
cast(floor(random() * {value_count}) as int) as sample_index
FROM range({sample_count}))

SELECT * FROM name_table
RIGHT OUTER JOIN oversampling_table ON name_table.id = oversampling_table.sample_index
        """
    )
    table = con.fetchall()
    for row in table:
        print(row)


@rootcmd.command()
def oversample_python():
    con = get_connection()
    register_en(con)
    con.execute(
        f"""
DROP TABLE IF EXISTS name_table;
CREATE TABLE name_table AS SELECT range as id, decoy_en('name') as name FROM range(1000);

SELECT oversample('name_table', 'name') from range(10000);
        """
    )
    table = con.fetch_df()
    print_rows(table)


if __name__ == "__main__":
    rootcmd()
